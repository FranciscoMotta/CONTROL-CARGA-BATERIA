

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jan 26 23:33:21 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _RCREG	set	4014
    51  0000                     _TXREG	set	4013
    52  0000                     _BAUDCONbits	set	4024
    53  0000                     _TXSTAbits	set	4012
    54  0000                     _RCSTAbits	set	4011
    55  0000                     _SPBRG	set	4015
    56  0000                     _TRISCbits	set	3988
    57  0000                     _ADCON2	set	4032
    58  0000                     _ADCON1	set	4033
    59  0000                     _ADCON0	set	4034
    60  0000                     _ADCON0bits	set	4034
    61  0000                     _ADRESH	set	4036
    62  0000                     _LATDbits	set	3980
    63  0000                     _TRISDbits	set	3989
    64                           
    65                           ; #config settings
    66  0000                     
    67                           	psect	cinit
    68  007E96                     __pcinit:
    69                           	opt callstack 0
    70  007E96                     start_initialization:
    71                           	opt callstack 0
    72  007E96                     __initialization:
    73                           	opt callstack 0
    74                           
    75                           ; Clear objects allocated to COMRAM (4 bytes)
    76  007E96  6A0E               	clrf	(__pbssCOMRAM+3)& (0+255),c
    77  007E98  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
    78  007E9A  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
    79  007E9C  6A0B               	clrf	__pbssCOMRAM& (0+255),c
    80  007E9E                     end_of_initialization:
    81                           	opt callstack 0
    82  007E9E                     __end_of__initialization:
    83                           	opt callstack 0
    84  007E9E  0100               	movlb	0
    85  007EA0  EF5F  F03F         	goto	_main	;jump to C main() function
    86                           
    87                           	psect	bssCOMRAM
    88  00000B                     __pbssCOMRAM:
    89                           	opt callstack 0
    90  00000B                     _Datonplus1:
    91                           	opt callstack 0
    92  00000B                     	ds	2
    93  00000D                     _Dato:
    94                           	opt callstack 0
    95  00000D                     	ds	2
    96                           
    97                           	psect	cstackCOMRAM
    98  000001                     __pcstackCOMRAM:
    99                           	opt callstack 0
   100  000001                     ?___awdiv:
   101                           	opt callstack 0
   102  000001                     Tx_num@dita:
   103                           	opt callstack 0
   104  000001                     ___awdiv@dividend:
   105                           	opt callstack 0
   106                           
   107                           ; 2 bytes @ 0x0
   108  000001                     	ds	2
   109  000003                     ___awdiv@divisor:
   110                           	opt callstack 0
   111                           
   112                           ; 2 bytes @ 0x2
   113  000003                     	ds	2
   114  000005                     ___awdiv@counter:
   115                           	opt callstack 0
   116                           
   117                           ; 1 bytes @ 0x4
   118  000005                     	ds	1
   119  000006                     ___awdiv@sign:
   120                           	opt callstack 0
   121                           
   122                           ; 1 bytes @ 0x5
   123  000006                     	ds	1
   124  000007                     ___awdiv@quotient:
   125                           	opt callstack 0
   126                           
   127                           ; 2 bytes @ 0x6
   128  000007                     	ds	2
   129  000009                     ??_main:
   130                           
   131                           ; 1 bytes @ 0x8
   132  000009                     	ds	2
   133                           
   134 ;;
   135 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   136 ;;
   137 ;; *************** function _main *****************
   138 ;; Defined at:
   139 ;;		line 88 in file "Control.c"
   140 ;; Parameters:    Size  Location     Type
   141 ;;		None
   142 ;; Auto vars:     Size  Location     Type
   143 ;;		None
   144 ;; Return value:  Size  Location     Type
   145 ;;                  1    wreg      void 
   146 ;; Registers used:
   147 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   148 ;; Tracked objects:
   149 ;;		On entry : 0/0
   150 ;;		On exit  : 0/0
   151 ;;		Unchanged: 0/0
   152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   153 ;;      Params:         0       0       0       0       0       0       0       0       0
   154 ;;      Locals:         0       0       0       0       0       0       0       0       0
   155 ;;      Temps:          2       0       0       0       0       0       0       0       0
   156 ;;      Totals:         2       0       0       0       0       0       0       0       0
   157 ;;Total ram usage:        2 bytes
   158 ;; Hardware stack levels required when called:    1
   159 ;; This function calls:
   160 ;;		_ADC_conf
   161 ;;		_Confi_Blue
   162 ;;		_Tx_num
   163 ;;		___awdiv
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           	psect	text0
   170  007EBE                     __ptext0:
   171                           	opt callstack 0
   172  007EBE                     _main:
   173                           	opt callstack 30
   174  007EBE                     
   175                           ;Control.c: 89: TRISDbits.RD0 = 0;
   176  007EBE  9095               	bcf	149,0,c	;volatile
   177                           
   178                           ;Control.c: 90: LATDbits.LATD0 = 1;
   179  007EC0  808C               	bsf	140,0,c	;volatile
   180  007EC2                     
   181                           ;Control.c: 91: _delay((unsigned long)((1500)*(20000000/4000.0)));
   182  007EC2  0E27               	movlw	39
   183  007EC4  6E0A               	movwf	(??_main+1)^0,c
   184  007EC6  0E0D               	movlw	13
   185  007EC8  6E09               	movwf	??_main^0,c
   186  007ECA  0E26               	movlw	38
   187  007ECC                     u207:
   188  007ECC  2EE8               	decfsz	wreg,f,c
   189  007ECE  D7FE               	bra	u207
   190  007ED0  2E09               	decfsz	??_main^0,f,c
   191  007ED2  D7FC               	bra	u207
   192  007ED4  2E0A               	decfsz	(??_main+1)^0,f,c
   193  007ED6  D7FA               	bra	u207
   194  007ED8  D000               	nop2	
   195  007EDA                     
   196                           ;Control.c: 92: LATDbits.LATD0 = 0;
   197  007EDA  908C               	bcf	140,0,c	;volatile
   198  007EDC                     
   199                           ;Control.c: 93: Confi_Blue();
   200  007EDC  EC52  F03F         	call	_Confi_Blue	;wreg free
   201  007EE0                     
   202                           ;Control.c: 94: ADC_conf();
   203  007EE0  EC44  F03F         	call	_ADC_conf	;wreg free
   204  007EE4                     l1025:
   205                           
   206                           ;Control.c: 96: ADRESH = 0;
   207  007EE4  0E00               	movlw	0
   208  007EE6  6EC4               	movwf	196,c	;volatile
   209  007EE8                     
   210                           ;Control.c: 98: ADCON0bits.GO = 1;
   211  007EE8  82C2               	bsf	194,1,c	;volatile
   212  007EEA                     l1029:
   213                           
   214                           ;Control.c: 100: if (ADCON0bits.GO == 1)goto SENSA;
   215  007EEA  A2C2               	btfss	194,1,c	;volatile
   216  007EEC  EF7A  F03F         	goto	u191
   217  007EF0  EF7C  F03F         	goto	u190
   218  007EF4                     u191:
   219  007EF4  EF7E  F03F         	goto	l1033
   220  007EF8                     u190:
   221  007EF8  EF75  F03F         	goto	l1029
   222  007EFC                     l1033:
   223                           
   224                           ;Control.c: 101: Tx_num(((ADRESH * 100) / 255)*5);
   225  007EFC  50C4               	movf	196,w,c	;volatile
   226  007EFE  0D64               	mullw	100
   227  007F00  CFF3 F001          	movff	prodl,___awdiv@dividend
   228  007F04  CFF4 F002          	movff	prodh,___awdiv@dividend+1
   229  007F08  0E00               	movlw	0
   230  007F0A  6E04               	movwf	(___awdiv@divisor+1)^0,c
   231  007F0C  6803               	setf	___awdiv@divisor^0,c
   232  007F0E  EC9E  F03F         	call	___awdiv	;wreg free
   233  007F12  5001               	movf	?___awdiv^0,w,c
   234  007F14  0D05               	mullw	5
   235  007F16  50F3               	movf	243,w,c
   236  007F18  EC40  F03F         	call	_Tx_num
   237  007F1C                     
   238                           ;Control.c: 102: _delay((unsigned long)((1000)*(20000000/4000.0)));
   239  007F1C  0E1A               	movlw	26
   240  007F1E  6E0A               	movwf	(??_main+1)^0,c
   241  007F20  0E5E               	movlw	94
   242  007F22  6E09               	movwf	??_main^0,c
   243  007F24  0E6E               	movlw	110
   244  007F26                     u217:
   245  007F26  2EE8               	decfsz	wreg,f,c
   246  007F28  D7FE               	bra	u217
   247  007F2A  2E09               	decfsz	??_main^0,f,c
   248  007F2C  D7FC               	bra	u217
   249  007F2E  2E0A               	decfsz	(??_main+1)^0,f,c
   250  007F30  D7FA               	bra	u217
   251  007F32  D000               	nop2	
   252  007F34  EF72  F03F         	goto	l1025
   253  007F38  EF00  F000         	goto	start
   254  007F3C                     __end_of_main:
   255                           	opt callstack 0
   256                           
   257 ;; *************** function ___awdiv *****************
   258 ;; Defined at:
   259 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;  dividend        2    0[COMRAM] int 
   262 ;;  divisor         2    2[COMRAM] int 
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  quotient        2    6[COMRAM] int 
   265 ;;  sign            1    5[COMRAM] unsigned char 
   266 ;;  counter         1    4[COMRAM] unsigned char 
   267 ;; Return value:  Size  Location     Type
   268 ;;                  2    0[COMRAM] int 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   276 ;;      Params:         4       0       0       0       0       0       0       0       0
   277 ;;      Locals:         4       0       0       0       0       0       0       0       0
   278 ;;      Temps:          0       0       0       0       0       0       0       0       0
   279 ;;      Totals:         8       0       0       0       0       0       0       0       0
   280 ;;Total ram usage:        8 bytes
   281 ;; Hardware stack levels used:    1
   282 ;; This function calls:
   283 ;;		Nothing
   284 ;; This function is called by:
   285 ;;		_main
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289                           	psect	text1
   290  007F3C                     __ptext1:
   291                           	opt callstack 0
   292  007F3C                     ___awdiv:
   293                           	opt callstack 30
   294  007F3C  0E00               	movlw	0
   295  007F3E  6E06               	movwf	___awdiv@sign^0,c
   296  007F40  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   297  007F42  EFA7  F03F         	goto	u130
   298  007F46  EFA5  F03F         	goto	u131
   299  007F4A                     u131:
   300  007F4A  EFAD  F03F         	goto	l979
   301  007F4E                     u130:
   302  007F4E  6C03               	negf	___awdiv@divisor^0,c
   303  007F50  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   304  007F52  B0D8               	btfsc	status,0,c
   305  007F54  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   306  007F56  0E01               	movlw	1
   307  007F58  6E06               	movwf	___awdiv@sign^0,c
   308  007F5A                     l979:
   309  007F5A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   310  007F5C  EFB4  F03F         	goto	u140
   311  007F60  EFB2  F03F         	goto	u141
   312  007F64                     u141:
   313  007F64  EFBA  F03F         	goto	l985
   314  007F68                     u140:
   315  007F68  6C01               	negf	___awdiv@dividend^0,c
   316  007F6A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   317  007F6C  B0D8               	btfsc	status,0,c
   318  007F6E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   319  007F70  0E01               	movlw	1
   320  007F72  1A06               	xorwf	___awdiv@sign^0,f,c
   321  007F74                     l985:
   322  007F74  0E00               	movlw	0
   323  007F76  6E08               	movwf	(___awdiv@quotient+1)^0,c
   324  007F78  0E00               	movlw	0
   325  007F7A  6E07               	movwf	___awdiv@quotient^0,c
   326  007F7C  5003               	movf	___awdiv@divisor^0,w,c
   327  007F7E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   328  007F80  B4D8               	btfsc	status,2,c
   329  007F82  EFC5  F03F         	goto	u151
   330  007F86  EFC7  F03F         	goto	u150
   331  007F8A                     u151:
   332  007F8A  EFEF  F03F         	goto	l1007
   333  007F8E                     u150:
   334  007F8E  0E01               	movlw	1
   335  007F90  6E05               	movwf	___awdiv@counter^0,c
   336  007F92  EFCF  F03F         	goto	l993
   337  007F96                     l991:
   338  007F96  90D8               	bcf	status,0,c
   339  007F98  3603               	rlcf	___awdiv@divisor^0,f,c
   340  007F9A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   341  007F9C  2A05               	incf	___awdiv@counter^0,f,c
   342  007F9E                     l993:
   343  007F9E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   344  007FA0  EFD4  F03F         	goto	u161
   345  007FA4  EFD6  F03F         	goto	u160
   346  007FA8                     u161:
   347  007FA8  EFCB  F03F         	goto	l991
   348  007FAC                     u160:
   349  007FAC                     l995:
   350  007FAC  90D8               	bcf	status,0,c
   351  007FAE  3607               	rlcf	___awdiv@quotient^0,f,c
   352  007FB0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   353  007FB2  5003               	movf	___awdiv@divisor^0,w,c
   354  007FB4  5C01               	subwf	___awdiv@dividend^0,w,c
   355  007FB6  5004               	movf	(___awdiv@divisor+1)^0,w,c
   356  007FB8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   357  007FBA  A0D8               	btfss	status,0,c
   358  007FBC  EFE2  F03F         	goto	u171
   359  007FC0  EFE4  F03F         	goto	u170
   360  007FC4                     u171:
   361  007FC4  EFE9  F03F         	goto	l1003
   362  007FC8                     u170:
   363  007FC8  5003               	movf	___awdiv@divisor^0,w,c
   364  007FCA  5E01               	subwf	___awdiv@dividend^0,f,c
   365  007FCC  5004               	movf	(___awdiv@divisor+1)^0,w,c
   366  007FCE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   367  007FD0  8007               	bsf	___awdiv@quotient^0,0,c
   368  007FD2                     l1003:
   369  007FD2  90D8               	bcf	status,0,c
   370  007FD4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   371  007FD6  3203               	rrcf	___awdiv@divisor^0,f,c
   372  007FD8  2E05               	decfsz	___awdiv@counter^0,f,c
   373  007FDA  EFD6  F03F         	goto	l995
   374  007FDE                     l1007:
   375  007FDE  5006               	movf	___awdiv@sign^0,w,c
   376  007FE0  B4D8               	btfsc	status,2,c
   377  007FE2  EFF5  F03F         	goto	u181
   378  007FE6  EFF7  F03F         	goto	u180
   379  007FEA                     u181:
   380  007FEA  EFFB  F03F         	goto	l1011
   381  007FEE                     u180:
   382  007FEE  6C07               	negf	___awdiv@quotient^0,c
   383  007FF0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   384  007FF2  B0D8               	btfsc	status,0,c
   385  007FF4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   386  007FF6                     l1011:
   387  007FF6  C007  F001         	movff	___awdiv@quotient,?___awdiv
   388  007FFA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   389  007FFE  0012               	return		;funcret
   390  008000                     __end_of___awdiv:
   391                           	opt callstack 0
   392                           
   393 ;; *************** function _Tx_num *****************
   394 ;; Defined at:
   395 ;;		line 79 in file "USART.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;  dita            1    wreg     unsigned char 
   398 ;; Auto vars:     Size  Location     Type
   399 ;;  dita            1    0[COMRAM] unsigned char 
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   409 ;;      Params:         0       0       0       0       0       0       0       0       0
   410 ;;      Locals:         1       0       0       0       0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0       0       0       0       0
   412 ;;      Totals:         1       0       0       0       0       0       0       0       0
   413 ;;Total ram usage:        1 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text2
   423  007E80                     __ptext2:
   424                           	opt callstack 0
   425  007E80                     _Tx_num:
   426                           	opt callstack 30
   427                           
   428                           ;incstack = 0
   429                           ;Tx_num@dita stored from wreg
   430  007E80  6E01               	movwf	Tx_num@dita^0,c
   431  007E82                     
   432                           ;USART.c: 80: TXREG = dita;
   433  007E82  C001  FFAD         	movff	Tx_num@dita,4013	;volatile
   434  007E86  0012               	return		;funcret
   435  007E88                     __end_of_Tx_num:
   436                           	opt callstack 0
   437                           
   438 ;; *************** function _Confi_Blue *****************
   439 ;; Defined at:
   440 ;;		line 48 in file "USART.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   454 ;;      Params:         0       0       0       0       0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text3
   468  007EA4                     __ptext3:
   469                           	opt callstack 0
   470  007EA4                     _Confi_Blue:
   471                           	opt callstack 30
   472  007EA4                     
   473                           ;USART.c: 49: TRISCbits.RC7=1;
   474  007EA4  8E94               	bsf	148,7,c	;volatile
   475                           
   476                           ;USART.c: 50: TRISCbits.RC6=0;
   477  007EA6  9C94               	bcf	148,6,c	;volatile
   478  007EA8                     
   479                           ;USART.c: 51: SPBRG=31;
   480  007EA8  0E1F               	movlw	31
   481  007EAA  6EAF               	movwf	175,c	;volatile
   482  007EAC                     
   483                           ;USART.c: 53: RCSTAbits.SPEN = 1;
   484  007EAC  8EAB               	bsf	171,7,c	;volatile
   485  007EAE                     
   486                           ;USART.c: 54: TXSTAbits.SYNC = 0;
   487  007EAE  98AC               	bcf	172,4,c	;volatile
   488  007EB0                     
   489                           ;USART.c: 55: BAUDCONbits.BRG16=0;
   490  007EB0  96B8               	bcf	184,3,c	;volatile
   491  007EB2                     
   492                           ;USART.c: 56: TXSTAbits.BRGH = 0;
   493  007EB2  94AC               	bcf	172,2,c	;volatile
   494  007EB4                     
   495                           ;USART.c: 63: TXSTAbits.TX9 = 0;
   496  007EB4  9CAC               	bcf	172,6,c	;volatile
   497  007EB6                     
   498                           ;USART.c: 64: TXSTAbits.TXEN = 1;
   499  007EB6  8AAC               	bsf	172,5,c	;volatile
   500  007EB8                     
   501                           ;USART.c: 66: RCSTAbits.RC9 = 0;
   502  007EB8  9CAB               	bcf	171,6,c	;volatile
   503  007EBA                     
   504                           ;USART.c: 67: RCSTAbits.CREN = 1;
   505  007EBA  88AB               	bsf	171,4,c	;volatile
   506  007EBC  0012               	return		;funcret
   507  007EBE                     __end_of_Confi_Blue:
   508                           	opt callstack 0
   509                           
   510 ;; *************** function _ADC_conf *****************
   511 ;; Defined at:
   512 ;;		line 107 in file "Control.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  2   10[None  ] int 
   519 ;; Registers used:
   520 ;;		wreg, status,2
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   526 ;;      Params:         0       0       0       0       0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0       0       0       0       0
   529 ;;      Totals:         0       0       0       0       0       0       0       0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text4
   540  007E88                     __ptext4:
   541                           	opt callstack 0
   542  007E88                     _ADC_conf:
   543                           	opt callstack 30
   544  007E88                     
   545                           ;Control.c: 108: ADCON0 = 0x01;
   546  007E88  0E01               	movlw	1
   547  007E8A  6EC2               	movwf	194,c	;volatile
   548                           
   549                           ;Control.c: 109: ADCON1 = 0x0E;
   550  007E8C  0E0E               	movlw	14
   551  007E8E  6EC1               	movwf	193,c	;volatile
   552                           
   553                           ;Control.c: 110: ADCON2 = 0x24;
   554  007E90  0E24               	movlw	36
   555  007E92  6EC0               	movwf	192,c	;volatile
   556  007E94  0012               	return		;funcret
   557  007E96                     __end_of_ADC_conf:
   558                           	opt callstack 0
   559  0000                     
   560                           	psect	rparam
   561  0000                     tosu	equ	0xFFF
   562                           tosh	equ	0xFFE
   563                           tosl	equ	0xFFD
   564                           stkptr	equ	0xFFC
   565                           pclatu	equ	0xFFB
   566                           pclath	equ	0xFFA
   567                           pcl	equ	0xFF9
   568                           tblptru	equ	0xFF8
   569                           tblptrh	equ	0xFF7
   570                           tblptrl	equ	0xFF6
   571                           tablat	equ	0xFF5
   572                           prodh	equ	0xFF4
   573                           prodl	equ	0xFF3
   574                           indf0	equ	0xFEF
   575                           postinc0	equ	0xFEE
   576                           postdec0	equ	0xFED
   577                           preinc0	equ	0xFEC
   578                           plusw0	equ	0xFEB
   579                           fsr0h	equ	0xFEA
   580                           fsr0l	equ	0xFE9
   581                           wreg	equ	0xFE8
   582                           indf1	equ	0xFE7
   583                           postinc1	equ	0xFE6
   584                           postdec1	equ	0xFE5
   585                           preinc1	equ	0xFE4
   586                           plusw1	equ	0xFE3
   587                           fsr1h	equ	0xFE2
   588                           fsr1l	equ	0xFE1
   589                           bsr	equ	0xFE0
   590                           indf2	equ	0xFDF
   591                           postinc2	equ	0xFDE
   592                           postdec2	equ	0xFDD
   593                           preinc2	equ	0xFDC
   594                           plusw2	equ	0xFDB
   595                           fsr2h	equ	0xFDA
   596                           fsr2l	equ	0xFD9
   597                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     467
                                              8 COMRAM     2     2      0
                           _ADC_conf
                         _Confi_Blue
                             _Tx_num
                            ___awdiv
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Tx_num                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Confi_Blue                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_conf                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_conf
   _Confi_Blue
   _Tx_num
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       E       1       14.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       E      20        0.0%
DATA                 0      0       E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jan 26 23:33:21 2020

                     l40 7E94                       l71 7E86                       l59 7EBC  
           ___awdiv@sign 0006              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l319 7FFE                      l841 7EAC                      l851 7EB6  
                    l843 7EAE                      l853 7EB8                      l845 7EB0  
                    l837 7EA4                      l855 7EBA                      l847 7EB2  
                    l839 7EA8                      l857 7E88                      l849 7EB4  
                    l859 7E82                      l971 7F3C                      l981 7F68  
                    l973 7F40                      l991 7F96                      l983 7F70  
                    l975 7F4E                      l993 7F9E                      l985 7F74  
                    l977 7F56                      l995 7FAC                      l987 7F7C  
                    l979 7F5A                      l997 7FB2                      l989 7F8E  
                    l999 7FC8             __CFG_CPB$OFF 000000                      u130 7F4E  
                    u131 7F4A                      u140 7F68                      u141 7F64  
                    u150 7F8E                      u151 7F8A                      u207 7ECC  
                    u160 7FAC                      u161 7FA8                      u217 7F26  
                    u170 7FC8                      u171 7FC4                      u180 7FEE  
                    u181 7FEA                      u190 7EF8                      u191 7EF4  
           __CFG_CPD$OFF 000000             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1001 7FD0                     l1011 7FF6                     l1003 7FD2  
                   l1005 7FD8                     l1021 7EDC                     l1007 7FDE  
                   l1023 7EE0                     l1015 7EBE                     l1009 7FEE  
                   l1033 7EFC                     l1025 7EE4                     l1017 7EC2  
                   l1035 7F1C                     l1027 7EE8                     l1019 7EDA  
                   l1029 7EEA                     _Dato 000D                     _main 7EBE  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
       __end_of_ADC_conf 7E96            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000               _Datonplus1 000B            __CFG_PLLDIV$1 000000  
                  ?_main 0001          __end_of___awdiv 8000          ___awdiv@divisor 0003  
             _Confi_Blue 7EA4          ___awdiv@counter 0005                    _RCREG 000FAE  
                  _SPBRG 000FAF            __CFG_USBDIV$1 000000                    _TXREG 000FAD  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
         __CFG_ICPRT$OFF 000000          __initialization 7E96             __end_of_main 7F3C  
                 ??_main 0009            __activetblptr 000000          __CFG_CCP2MX$OFF 000000  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4         ___awdiv@dividend 0001           __CFG_XINST$OFF 000000  
                 _Tx_num 7E80                ??___awdiv 0005         ___awdiv@quotient 0007  
            ?_Confi_Blue 0001                ?_ADC_conf 0001               __accesstop 0060  
__end_of__initialization 7E9E          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001               Tx_num@dita 0001               ??_ADC_conf 0001  
    __size_of_Confi_Blue 001A                  ?_Tx_num 0001          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000          __size_of_Tx_num 0008  
                ___awdiv 7F3C          __CFG_STVREN$OFF 000000                  __pcinit 7E96  
                __ramtop 0800                  __ptext0 7EBE                  __ptext1 7F3C  
                __ptext2 7E80                  __ptext3 7EA4                  __ptext4 7E88  
   end_of_initialization 7E9E                _RCSTAbits 000FAB             ??_Confi_Blue 0001  
              _TRISCbits 000F94                _TRISDbits 000F95        __size_of_ADC_conf 000E  
              _TXSTAbits 000FAC       __end_of_Confi_Blue 7EBE           __end_of_Tx_num 7E88  
            _BAUDCONbits 000FB8      start_initialization 7E96                 ??_Tx_num 0001  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 000B                 ?___awdiv 0001  
               _ADC_conf 7E88                 _LATDbits 000F8C         __CFG_WDTPS$32768 000000  
             _ADCON0bits 000FC2                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___awdiv 00C4            __size_of_main 007E    __CFG_CPUDIV$OSC1_PLL2 000000  
